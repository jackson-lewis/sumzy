name: Test

on:
  push:
    branches:
    - main
    paths:
    - frontend/**

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /tmp:/tmp

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Compose
      run: sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      
    - name: Make Docker Compose executable
      run: sudo chmod +x /usr/local/bin/docker-compose

    - name: Set-up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - uses: actions/cache@v4
      id: npm-cache
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependancies
      if: steps.npm-cache.outputs.cache-hit != 'true'
      working-directory: frontend
      run: npm ci

    - name: Test
      working-directory: frontend
      run: CI=true npm test
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DIRECT_URL: ${{ secrets.DIRECT_URL }}